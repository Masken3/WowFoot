% if(!mSL) {
Not found.
% return 404; }

<p>List locks:</p>

<table class="tab" id="uses" summary="uses of skill">
<!-- Title row -->
<thead><tr>
<td>Lock ID</td>
<td>Name</td>
<td>Source</td>
<td>Skill</td>
</tr></thead>

<tbody id="usesBody">
</tbody>
</table>

<table class="hidden" summary="hidden">
%	int lockType = lockTypeFromSkill(mSL->id);
%	int count = 0, lockCount = 0;
% multimap<int, int> skillOrder;	// value, countId
%	for(auto p = LockIndex::findLock(lockType); p.first != p.second; ++p.first) {
%		const Lock& l(*p.first->second);
% 	int level = -1;
% 	for(uint i=0; i<ARRAY_SIZE(l.e); i++) {
% 		const Lock::Entry& e(l.e[i]);
% 		if(e.type == LOCK_KEY_SKILL && e.index == lockTypeFromSkill(mSL->id)) {
% 			// locks never have two entries on the same type.
% 			assert(level == -1);
% 			level = e.skill;
% 		}
% 	}
%//		printf("%i: level %i\n", l.id, level);
%		lockCount++;
%		for(auto op = gObjects.findLock(l.id); op.first != op.second; ++op.first) {
%			count++;
%			const Object& o(*op.first->second);
%			insert(skillOrder, level, count);
%//			printf("object %i\n", o.entry);
<tr id="row<%=count%>">
<td><%=l.id%></td>
<td class="name"><a href="object=<%=o.entry%>"><%=o.name%></a></td>
<td class="source"><%=o.spawnCount%> spawn points<%/*streamSource(stream, o);*/%></td>
<td class="skill">
<span class="skillRed"><%=level%></span>
<span class="skillYellow"><%=level + 25%></span>
<span class="skillGreen"><%=level + 50%></span>
<span class="skillGray"><%=level + 100%></span>
</td>
</tr>
%		}
%		for(auto op = gItems.findLockId(l.id); op.first != op.second; ++op.first) {
%			count++;
%			const Item& i(*op.first->second);
%			insert(skillOrder, level, count);
<tr id="row<%=count%>">
<td><%=l.id%></td>
<td class="name"><a href="item=<%=i.entry%>"><%=i.name%></a></td>
<td class="source"<%/*streamSource(stream, i);*/%></td>
<td class="skill">
<span class="skillRed"><%=level%></span>
<span class="skillYellow"><%=level + 25%></span>
<span class="skillGreen"><%=level + 50%></span>
<span class="skillGray"><%=level + 100%></span>
</td>
</tr>
%		}
%	}
<p>Found <%=lockCount%> locks used by <%=count%> objects.</p>
<script type="text/javascript">
skillOrder = [
% for(auto itr = skillOrder.begin(); itr != skillOrder.end(); ++itr) {
'row<%=itr->second%>',
% }
]
</script>

%#if 0
<tr>
<td><%=lock.id%></td>
<td class="name"></td>
<td class="source">
% int requiredSkillLevel = streamSource(stream, s.id);
</td>
<td class="skill">
% auto slas = SkillLineAbilityIndex::findSpell(s.id);
% for(; slas.first != slas.second; ++slas.first) {
% const SkillLineAbility* sla = slas.first->second;
<%=sla->reqSkillValue%>
% if(requiredSkillLevel >= 0) {
<span class="skillRed"><%=requiredSkillLevel%></span>
% }
<span class="skillYellow"><%=sla->minValue%></span>
<span class="skillGreen"><%=sla->maxValue - (sla->maxValue - sla->minValue) / 2%></span>
<span class="skillGray"><%=sla->maxValue%></span>
% }
</td>
</tr>
%#endif
</tbody>
</table>

<script type="text/javascript">
//alert(skillOrder.length);
t = document.getElementById("usesBody");
for(var i=0; i<skillOrder.length; i++) {
	t.appendChild(document.getElementById(skillOrder[i]));
}
</script>
