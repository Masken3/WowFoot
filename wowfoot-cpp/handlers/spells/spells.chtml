% if(!mPair) {
Not found.
% return 404; }

<p>List spells:</p>

% if(mPair) {
<table class="tab" summary="spells">
<!-- Title row -->
<thead><tr>
<td>ID</td>
<td>Icon/item</td>
<td>Name</td>
<td>Reagents</td>
<td>Source</td>
<td>Skill</td>
</tr></thead>

<tbody id="usesBody">
</tbody>
</table>

<table class="hidden" summary="hidden">
%  int count = 0;
%  multimap<int, int> spellOrder;	// value, countId
%  while(mPair->hasNext() && count < 1000) {
%   mItemQuality = NULL;
%   const Spell& s(mPair->next());
%   const Spell::Effect& e(s.effect[0]);
%		insert(spellOrder, slaYellow(s.id), count);
<tr id="row<%=count%>">
<td><%=s.id%></td>
<td class="effect">
% if(e.itemType) {
% streamMultiItem(stream, e.itemType, e.basePoints + e.dieSides);
% } else {
% const SpellIcon* si = gSpellIcons.find(s.spellIconID);
% if(si) {
<img src="<%ESCAPE_URL(getIconRaw(si->icon));%>" alt="<%ESCAPE(si->icon);%>">
% } else if(s.spellIconID != 0) {
Warning: invalid icon id (<%=s.spellIconID%>)
% }
% }
</td>
<td class="name"><a href="spell=<%=s.id%>">
% if(mItemQuality) {
<span style="color:#<%=mItemQuality->color%>;">
% }
<%ESCAPE(s.name);%>
% if(s.rank) if(s.rank[0]) {
(<%=s.rank%>)
% }
% if(mItemQuality) {
</span>
% }
</a></td>
<td class="reagents">
% for(size_t i=0; i<ARRAY_SIZE(s.reagent); i++) { const Spell::Reagent& r(s.reagent[i]);
% streamMultiItem(stream, r.id, r.count);
% }
</td>
<td class="source">
% int requiredSkillLevel = streamSource(stream, s.id);
</td>
<td class="skill">
% auto slas = SkillLineAbilityIndex::findSpell(s.id);
% for(; slas.first != slas.second; ++slas.first) {
% const SkillLineAbility* sla = slas.first->second;
%//<%=sla->reqSkillValue%>
% if(requiredSkillLevel >= 0) {
<span class="skillRed"><%=requiredSkillLevel%></span>
% }
<span class="skillYellow"><%=sla->minValue%></span>
<span class="skillGreen"><%=sla->maxValue - (sla->maxValue - sla->minValue) / 2%></span>
<span class="skillGray"><%=sla->maxValue%></span>
% }
</td>
</tr>
%   count++;
%  }
</table>
<p><%=count%> spells.</p>

<script type="text/javascript">
spellOrder = [
% for(auto itr = spellOrder.begin(); itr != spellOrder.end(); ++itr) {
'row<%=itr->second%>',
% }
]
//alert(spellOrder.length);
t = document.getElementById("usesBody");
for(var i=0; i<spellOrder.length; i++) {
	t.appendChild(document.getElementById(spellOrder[i]));
}
</script>

% }
