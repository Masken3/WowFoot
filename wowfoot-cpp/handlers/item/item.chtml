<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
	<title><%= mTitle %> - Item - WowFoot</title>
	<LINK href="static/style.css" rel="stylesheet" type="text/css">
	<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body>

% if(!a) {
Item <%=mTitle%> does not exist.
% } else {
<p><span class="itemName" style="color:#<%=ITEM_QUALITY(a->quality).color%>;"><%= a->name %></span></p>

%// icon
<p>
% const ItemDisplayInfo* di = gItemDisplayInfos.find(a->displayId);
% if(di) {
<img src="<%=getIcon(di->icon)%>" alt="<%=di->icon%>">
% } else {
Warning: invalid display id (<%=a->displayId%>)
% }
</p>

<p>
% if(a->bonding != 0) {
<%= ITEM_BONDING(a->bonding) %><br>
% }

% for(int i=0; i!=nITEM_FLAGS; i++) { if((a->flags & ITEM_FLAGS[i].flag) != 0) {
<%= ITEM_FLAGS[i].name %><br>
% }}
% if((a->flags & 134221824) && a->quality == 7) {
Bind to Account<br>
% }

<!--(<%= a->totemCategory %>)-->
% const TotemCategory* tc = gTotemCategories.find(a->totemCategory); if(tc) {
<%= tc->name %><br>
% }

Class: <%streamItemClassHtml(stream, *a);%><!--(<%= a->class_ %> / <%= a->subclass %>)--><br>
% if(a->inventoryType != 0) {
Equip: <%= ITEM_EQUIP(a->inventoryType) %><!--(<%= a->inventoryType %>)--><br>
% }
Material: <%= ITEM_MATERIAL(a->material) %><!--(<%= a->material %>)--><br>
Item level <%= a->itemLevel %><br>

%// todo: skill, honorrank, cityrank
% string classes = chrClasses(a->allowableClass);
% if(!classes.empty()) {
Classes: <%=classes%><br>
% }

% string races = chrRaces(a->allowableRace);
% if(!races.empty()) {
Races: <%=races%><br>
% }

%// unique
% if(a->maxCount != 0) {
Unique
% if(a->maxCount != 1) {
(<%= a->maxCount %>)
% }}
<br>

%// stackable
% if(a->stackable > 1) {
Stack: <%= a->stackable %><br>
% }

%// containerSlots
% if(a->containerSlots != 0) {
Bag: <%= a->containerSlots %> slots<br>
% }

%// bagFamily
% if(a->bagFamily != 0) {
Bag family:
% for(int i=0; i!=nITEM_BAG_FAMILY; i++) { if(a->bagFamily & ITEM_BAG_FAMILY[i].flag) {
%= ITEM_BAG_FAMILY[i].name
% }}
<br>
% }

% if(fnz(mDps)) {
% for(int i=0; i<1; i++) { if(fnz(a->dmg_min[i]) || fnz(a->dmg_max[i])) {
<%= a->dmg_min[i] %> - <%= a->dmg_max[i] %> <%= ITEM_DAMAGE_TYPE(a->dmg_type[i]) %> damage<br>
% }
(<%= mDps %> dps)<br>
Speed: <%= a->delay / 1000.0 %><br>
% }}

% if(a->armor != 0) {
<%= a->armor %> armor<br>
% }

% for(int i=0; i<mnResistances; i++) { int v = a->*mResistances[i].value; if(v != 0) {
<span class="green">+<%= v %> <%= mResistances[i].name %> resistance</span><br>
% }}

% for(int i=0; i<a->statsCount; i++) { int val = a->stat_value[i];
<span class="green"><%= ITEM_STAT(a->stat_type[i]) %> <%if(val>0){%>+<%}%><%=val%></span><br>
% }

% if(a->randomProperty != 0) {
Random property <%= a->randomProperty %><br>
% }

% if(a->randomSuffix != 0) {
Random suffix <%= a->randomSuffix %><br>
% }

%// spell effects
% for(int i=0; i<5; i++) { int id = a->spellId[i]; if(id) { const Spell* s = gSpells.find(id);
<span class="green"><%= SPELLTRIGGER(a->spellTrigger[i]) %>: <a href="spell=<%=id%>"><%
if(s){%><%=s->name%><%}else{%><%=id%><%}
%></a></span>
% if(a->spellTrigger[i] == 2) {	// Chance on Hit
(<%= a->spellPpmRate[i] %> Procs per minute)
% }
% if(a->spellCooldown[i] != -1) {
(Cooldown: <%= a->spellCooldown[i] %> ms)
% }
<br>
% } }

% if(!a->description.empty()) {
<span class="itemDescription">"<%= a->description %>"</span><br>
% }

% if(a->itemset) {
<br>
Part of set: <%NAMELINK(gItemSets, a->itemset);%><br>
% }
</p>

% if(mTabs.size() == 0) {
<p>Item source &amp; use not found.</p>
% }

% }	//if(a)

% returnCode = tabsChtml::run(stream);

</body>
</html>
