#ifndef ARITHC_INTERNAL_H
#define ARITHC_INTERNAL_H

/* consts from Michael Schindler */

#define CODE_BITS		31
#define SHIFT_BITS		(CODE_BITS - 8)
#define CODE_BYTES		((CODE_BITS+7)/8)

#define PRECISION_BITS	9		// coding is done to this accuracy (in terms of range>>PRECISION_BITS)

#define MinRange 		((ulong)1<<SHIFT_BITS)
#define One   			((ulong)1<<CODE_BITS)
#define CumProbMax  	(MinRange>>PRECISION_BITS)
#define CODE_MASK		(One - 1)

#define EXTRA_BITS		((CODE_BITS-1) % 8 + 1)		// == 7	== CODE_BITS - (8*(CODE_BYTES-1))
#define TAIL_EXTRA_BITS	(8 - EXTRA_BITS)			// == 1

	// extra_bits are the bits in "code" that don't quite fit in bytes

//--------------------------------------------------------------
//--- range normalizers for encoder & decoder; also does the IO

void arithEncRenorm(arithInfo * ari,ulong code,ulong range);

void arithDecRenorm(arithInfo * ari,ulong *pcode,ulong *prange);

#endif // ARITHC_INTERNAL_H

